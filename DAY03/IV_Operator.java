public class IV_Operator {
  public static void main(String[] args) {
     /*
      4.1 연산자

      
      │ 우선순위  |  연산자           |  연산자 설명
            ⤊   ()[]                괄호
            ⤊   .                   소수점/ 참조 연산자
        H   ⤊   ++,--               증/감 연산자(증가, 감소)
        I   ⤊   +,-                 부호
        G   ⤊    !                  논리 연산자(반전)
        H   ⤊    ~                  비트 여산자(반전)
            ⤊    (type)             형 변환
            ⤊   *, /, %             산술 연산자(곱셈, 나눗셈, 나머지)
            ⤊   +, -                산술 연산자(덧셈, 뺄셈)
            ⤊   <<, >>, >>>         비트 이동 연산자(좌, 우, 우(부호 포함)
            │   <, <=, >, >=        비교 연산자(대/소 비교)
            ⤋   ==, !=              비교 연산자(동/이 비교)       
        L   ⤋   instanceof          type
        O   ⤋   &, |, ^             비트연산자(AND, OR, XOR)
        W   ⤋   &&, ||              논리 연산자(Short Circuit)
            ⤋   ?                   논리 연산자(3항 연산자)
            ⤋   =                     대입 연산자
            ⤋   +=, -+, *=, /=, %=    연산 후 대입 연산
            ⤋   <<=, >>=, >>>=        연산 후 대입 연산
            ⤋   &=, ^=, |=            연산 후 대입 연산

      * 형 변환(type casting)
        - 데이터의 크기
        # byte(1) < short(2) < int(4) < long(8) < float(4) < double(8)
        
        - float은 4byte인테 long보다 큰 타입인 이유는 표현할 수 있는 값의 경우의 수가 float이 더 크기 때문입니다.

        - 크기가 작은 데이터 타입을 크기가 큰 데이터 타입으로 변환할 때는 캐스트 연산자를 사용하지 않아도 컴파일러에 의해 자동으로 형변환이 일어납니다. (자동 형 변환: promotion)
      */
  }
}
